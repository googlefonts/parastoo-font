{
.appVersion = "3343";
.formatVersion = 3;
customParameters = (
{
name = licenses;
value = "SIL Open Font License 1.1
Copyright (c) 2016 by Saber Rastikerdar. All Rights Reserved.";
},
{
name = licenseURL;
value = "http://scripts.sil.org/OFL_web";
},
{
name = preferredFamilyNames;
value = Parastoo;
},
{
name = uniqueID;
value = "Parastoo Regular";
},
{
name = versionString;
value = "Version 2.0.1";
},
{
name = codePageRanges;
value = (
"1252",
"1256",
"864",
"708"
);
},
{
name = openTypeOS2FamilyClass;
value = (
0,
0
);
},
{
name = panose;
value = (
2,
11,
6,
3,
3,
8,
4,
2,
2,
4
);
},
{
name = fsType;
value = (
);
},
{
name = unicodeRanges;
value = (
0,
1,
13,
31,
63,
67
);
},
{
name = vendorID;
value = "    ";
},
{
name = "Write lastChange";
value = 0;
},
{
name = "Write DisplayStrings";
value = 0;
}
);
date = "2015-05-17 08:12:36 +0000";
familyName = Parastoo;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem arab dflt;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature fina;
feature init;
feature medi;
";
tag = aalt;
},
{
automatic = 1;
code = "lookup ccmp_arab_1 {
	lookupflag 0;
	sub shadda-ar damma-ar by shadda_damma-ar;
	sub damma-ar shadda-ar by shadda_damma-ar;
	sub shadda-ar dammatan-ar by shadda_dammatan-ar;
	sub dammatan-ar shadda-ar by shadda_dammatan-ar;
	sub shadda-ar fatha-ar by shadda_fatha-ar;
	sub fatha-ar shadda-ar by shadda_fatha-ar;
	sub shadda-ar fathatan-ar by shadda_fathatan-ar;
	sub fathatan-ar shadda-ar by shadda_fathatan-ar;
} ccmp_arab_1;

script arab;
lookup ccmp_arab_1;
";
tag = ccmp;
},
{
automatic = 1;
code = "sub beh-ar by beh-ar.init;
sub peh-ar by peh-ar.init;
sub alefMaksura-ar by alefMaksura-ar.init;
sub teh-ar by teh-ar.init;
sub theh-ar by theh-ar.init;
sub jeem-ar by jeem-ar.init;
sub tcheh-ar by tcheh-ar.init;
sub hah-ar by hah-ar.init;
sub khah-ar by khah-ar.init;
sub seen-ar by seen-ar.init;
sub sheen-ar by sheen-ar.init;
sub sad-ar by sad-ar.init;
sub dad-ar by dad-ar.init;
sub tah-ar by tah-ar.init;
sub zah-ar by zah-ar.init;
sub ain-ar by ain-ar.init;
sub ghain-ar by ghain-ar.init;
sub feh-ar by feh-ar.init;
sub veh-ar by veh-ar.init;
sub fehDotless-ar by fehDotless-ar.init;
sub qaf-ar by qaf-ar.init;
sub kaf-ar by kaf-ar.init;
sub keheh-ar by keheh-ar.init;
sub gaf-ar by gaf-ar.init;
sub lam-ar by lam-ar.init;
sub lamVabove-ar by lamVabove-ar.init;
sub meem-ar by meem-ar.init;
sub noon-ar by noon-ar.init;
sub heh-ar by heh-ar.init;
sub hehDoachashmee-ar by hehDoachashmee-ar.init;
sub yeh-ar by yeh-ar.init;
sub yehHamzaabove-ar by yehHamzaabove-ar.init;
sub yehVabove-ar by yehVabove-ar.init;
sub yehFarsi-ar by yehFarsi-ar.init;
";
tag = init;
},
{
automatic = 1;
code = "sub beh-ar by beh-ar.medi;
sub peh-ar by peh-ar.medi;
sub alefMaksura-ar by alefMaksura-ar.medi;
sub teh-ar by teh-ar.medi;
sub theh-ar by theh-ar.medi;
sub jeem-ar by jeem-ar.medi;
sub tcheh-ar by tcheh-ar.medi;
sub hah-ar by hah-ar.medi;
sub khah-ar by khah-ar.medi;
sub seen-ar by seen-ar.medi;
sub sheen-ar by sheen-ar.medi;
sub sad-ar by sad-ar.medi;
sub dad-ar by dad-ar.medi;
sub tah-ar by tah-ar.medi;
sub zah-ar by zah-ar.medi;
sub ain-ar by ain-ar.medi;
sub ghain-ar by ghain-ar.medi;
sub feh-ar by feh-ar.medi;
sub veh-ar by veh-ar.medi;
sub fehDotless-ar by fehDotless-ar.medi;
sub qaf-ar by qaf-ar.medi;
sub kaf-ar by kaf-ar.medi;
sub keheh-ar by keheh-ar.medi;
sub gaf-ar by gaf-ar.medi;
sub lam-ar by lam-ar.medi;
sub lamVabove-ar by lamVabove-ar.medi;
sub meem-ar by meem-ar.medi;
sub noon-ar by noon-ar.medi;
sub heh-ar by heh-ar.medi;
sub hehDoachashmee-ar by hehDoachashmee-ar.medi;
sub yeh-ar by yeh-ar.medi;
sub yehHamzaabove-ar by yehHamzaabove-ar.medi;
sub yehVabove-ar by yehVabove-ar.medi;
sub yehFarsi-ar by yehFarsi-ar.medi;
sub fathatan-ar by fathatan-ar.medi;
sub kasra-ar by kasra-ar.medi;
sub fatha-ar by fatha-ar.medi;
sub damma-ar by damma-ar.medi;
sub shadda-ar by shadda-ar.medi;
sub sukun-ar by sukun-ar.medi;
";
tag = medi;
},
{
automatic = 1;
code = "sub alef-ar by alef-ar.fina;
sub alefHamzaabove-ar by alefHamzaabove-ar.fina;
sub alefHamzabelow-ar by alefHamzabelow-ar.fina;
sub alefMadda-ar by alefMadda-ar.fina;
sub behDotless-ar by behDotless-ar.fina;
sub beh-ar by beh-ar.fina;
sub peh-ar by peh-ar.fina;
sub teh-ar by teh-ar.fina;
sub theh-ar by theh-ar.fina;
sub jeem-ar by jeem-ar.fina;
sub tcheh-ar by tcheh-ar.fina;
sub hah-ar by hah-ar.fina;
sub khah-ar by khah-ar.fina;
sub dal-ar by dal-ar.fina;
sub thal-ar by thal-ar.fina;
sub reh-ar by reh-ar.fina;
sub zain-ar by zain-ar.fina;
sub rehVbelow-ar by rehVbelow-ar.fina;
sub jeh-ar by jeh-ar.fina;
sub seen-ar by seen-ar.fina;
sub sheen-ar by sheen-ar.fina;
sub sad-ar by sad-ar.fina;
sub dad-ar by dad-ar.fina;
sub tah-ar by tah-ar.fina;
sub zah-ar by zah-ar.fina;
sub ain-ar by ain-ar.fina;
sub ghain-ar by ghain-ar.fina;
sub feh-ar by feh-ar.fina;
sub veh-ar by veh-ar.fina;
sub fehDotless-ar by fehDotless-ar.fina;
sub qafDotless-ar by qafDotless-ar.fina;
sub qaf-ar by qaf-ar.fina;
sub kaf-ar by kaf-ar.fina;
sub keheh-ar by keheh-ar.fina;
sub gaf-ar by gaf-ar.fina;
sub lam-ar by lam-ar.fina;
sub lamVabove-ar by lamVabove-ar.fina;
sub meem-ar by meem-ar.fina;
sub noon-ar by noon-ar.fina;
sub noonghunna-ar by noonghunna-ar.fina;
sub heh-ar by heh-ar.fina;
sub hehHamzaabove-ar by hehHamzaabove-ar.fina;
sub tehMarbuta-ar by tehMarbuta-ar.fina;
sub waw-ar by waw-ar.fina;
sub wawTwodots-ar by wawTwodots-ar.fina;
sub wawHamzaabove-ar by wawHamzaabove-ar.fina;
sub oe-ar by oe-ar.fina;
sub alefMaksura-ar by alefMaksura-ar.fina;
sub yeh-ar by yeh-ar.fina;
sub yehHamzaabove-ar by yehHamzaabove-ar.fina;
sub yehVabove-ar by yehVabove-ar.fina;
sub yehFarsi-ar by yehFarsi-ar.fina;
sub ae-ar by ae-ar.fina;
sub lam_alef-ar by lam_alef-ar.fina;
sub lam_alefHamzaabove-ar by lam_alefHamzaabove-ar.fina;
sub lam_alefHamzabelow-ar by lam_alefHamzabelow-ar.fina;
sub lam_alefMadda-ar by lam_alefMadda-ar.fina;
";
tag = fina;
},
{
automatic = 1;
code = "script arab;
lookup rlig_arab_0 {
	lookupflag IgnoreMarks;
	sub alef-ar lam-ar.init lam-ar.medi heh-ar.fina by allah-ar;
	sub lam-ar.init alef-ar.fina by lam_alef-ar;
	sub lam-ar.medi alef-ar.fina by lam_alef-ar.fina;
	sub lam-ar.init alefHamzaabove-ar.fina by lam_alefHamzaabove-ar;
	sub lam-ar.medi alefHamzaabove-ar.fina by lam_alefHamzaabove-ar.fina;
	sub lam-ar.init alefHamzabelow-ar.fina by lam_alefHamzabelow-ar;
	sub lam-ar.medi alefHamzabelow-ar.fina by lam_alefHamzabelow-ar.fina;
	sub lam-ar.init alefMadda-ar.fina by lam_alefMadda-ar;
	sub lam-ar.medi alefMadda-ar.fina by lam_alefMadda-ar.fina;
} rlig_arab_0;
";
tag = rlig;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 2350;
},
{
name = typoDescender;
value = -1200;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaAscender;
value = 2350;
},
{
name = hheaDescender;
value = -1200;
},
{
name = hheaLineGap;
value = 0;
},
{
name = winAscent;
value = 2350;
},
{
name = winDescent;
value = 1200;
},
{
name = strikeoutPosition;
value = 530;
},
{
name = strikeoutSize;
value = 102;
},
{
name = underlineThickness;
value = 100;
},
{
name = underlinePosition;
value = -500;
},
{
name = subscriptXOffset;
value = 0;
},
{
name = subscriptXSize;
value = 1331;
},
{
name = subscriptYOffset;
value = 286;
},
{
name = subscriptYSize;
value = 1433;
},
{
name = superscriptXOffset;
value = 0;
},
{
name = superscriptXSize;
value = 1331;
},
{
name = superscriptYOffset;
value = 983;
},
{
name = superscriptYSize;
value = 1433;
}
);
guides = (
{
pos = (1024,538);
},
{
pos = (1024,706);
}
);
id = m001;
metricValues = (
{
pos = 1638;
},
{
pos = 1638;
},
{
pos = 1082;
},
{
},
{
pos = -410;
},
{
}
);
name = Regular;
},
{
customParameters = (
{
name = typoAscender;
value = 2350;
},
{
name = typoDescender;
value = -1200;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaAscender;
value = 2350;
},
{
name = hheaDescender;
value = -1200;
},
{
name = hheaLineGap;
value = 0;
},
{
name = winAscent;
value = 2350;
},
{
name = winDescent;
value = 1200;
},
{
name = strikeoutPosition;
value = 530;
},
{
name = strikeoutSize;
value = 102;
},
{
name = underlineThickness;
value = 100;
},
{
name = underlinePosition;
value = -500;
},
{
name = subscriptXOffset;
value = 0;
},
{
name = subscriptXSize;
value = 1331;
},
{
name = subscriptYOffset;
value = 286;
},
{
name = subscriptYSize;
value = 1433;
},
{
name = superscriptXOffset;
value = 0;
},
{
name = superscriptXSize;
value = 1331;
},
{
name = superscriptYOffset;
value = 983;
},
{
name = superscriptYSize;
value = 1433;
}
);
guides = (
{
pos = (1024,614.5);
},
{
pos = (1024,846.771);
},
{
pos = (1024,1530);
},
{
pos = (1024,514.651);
},
{
pos = (1024,872.042);
},
{
pos = (1024,1575);
},
{
pos = (1024,230);
},
{
pos = (1024,1404.04);
}
);
iconName = Bold;
id = "D346AEB9-DD6D-429C-AFEE-90B4948468D3";
metricValues = (
{
pos = 1638;
},
{
pos = 1638;
},
{
pos = 1082;
},
{
},
{
pos = -410;
},
{
}
);
name = Bold;
}
);
instances = (
{
customParameters = (
{
name = postscriptWeightName;
value = Regular;
}
);
instanceInterpolations = {
m001 = 1;
};
name = Regular;
properties = (
{
key = postscriptFontName;
value = Parastoo;
},
{
key = postscriptFullNames;
values = (
{
language = dflt;
value = Parastoo;
}
);
},
{
key = styleMapFamilyNames;
values = (
{
language = dflt;
value = "Parastoo Regular";
}
);
}
);
}
);
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = dflt;
value = "Copyright (c) 2016 by Saber Rastikerdar. All Rights Reserved.
Based on DejaVu font.
Non-Arabic(Latin) glyphs and data are imported from Lora font under the Open Font License.";
}
);
},
{
key = licenses;
values = (
{
language = dflt;
value = "SIL Open Font License 1.1
Copyright (c) 2016 by Saber Rastikerdar. All Rights Reserved.";
}
);
},
{
key = licenseURL;
value = "http://scripts.sil.org/OFL_web";
},
{
key = manufacturers;
values = (
{
language = dflt;
value = "Saber Rastikerdar (saber.rastikerdar@gmail.com)";
}
);
},
{
key = uniqueID;
value = "Parastoo Regular";
},
{
key = vendorID;
value = "    ";
},
{
key = versionString;
value = "Version 2.0.1";
}
);
settings = {
disablesAutomaticAlignment = 1;
};
unitsPerEm = 2048;
userData = {
UFOFormat = 3;
};
versionMajor = 2;
versionMinor = 0;
}
