{
glyphname = t;
layers = (
{
layerId = m001;
shapes = (
{
closed = 1;
nodes = (
(200,937,l),
(196,345,ls),
(194.667,235.667,o),
(212,157,o),
(240,101,cs),
(254,73,o),
(270.167,50.167,o),
(288.5,32.5,cs),
(344.744,-21.699,o),
(413.09,-33,o),
(475,-33,cs),
(542.992,-33,o),
(665.154,-18.589,o),
(784,161,c),
(729,206,l),
(675.667,127.333,o),
(602.667,83,o),
(532,83,cs),
(472,83,o),
(434,107.833,o),
(410,156.5,cs),
(386,205.167,o),
(377,276.667,o),
(377,370,cs),
(377,376,ls),
(377,380,o),
(377.167,388.333,o),
(377.5,401,cs),
(377.833,413.667,o),
(378,432.167,o),
(378,456.5,cs),
(378,505.775,o),
(379,591.271,o),
(379,713,cs),
(379,775.667,o),
(379.333,851.333,o),
(380,940,c),
(725,944,l),
(725,1024,l),
(380,1024,l),
(380,1066,o),
(380.167,1110.667,o),
(380.5,1158,cs),
(380.833,1205.333,o),
(381,1256.333,o),
(381,1311,c),
(311,1311,l),
(276.658,1194.766,o),
(188.8,1026.7,o),
(43,1024,c),
(43,936,l),
(43,936,l),
(43,936,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
28 27 2 4 3 1 74 0 1 0 1 131 6 1 3 3 0 95 2 1 0 0 35 75 0 4 4 5 95 0 5 5 41 5 76 23 39 43 17 19 20 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 793;
},
{
layerId = "D346AEB9-DD6D-429C-AFEE-90B4948468D3";
shapes = (
{
closed = 1;
nodes = (
(174,855,l),
(171,361,ls),
(171,196.516,o),
(215.224,91.614,o),
(279.5,35.5,cs),
(345.273,-21.921,o),
(424.41,-33,o),
(489,-33,cs),
(526.333,-33,o),
(584,-32,o),
(652,-4,cs),
(720,24,o),
(796.333,79.667,o),
(871,189,c),
(772,281,l),
(701.533,181.374,o),
(629.813,158,o),
(586,158,cs),
(482.662,158,o),
(462,257.527,o),
(462,357,cs),
(462,386,ls),
(462,426.065,o),
(463.092,584.394,o),
(465,861,c),
(726,866,l),
(726,1024,l),
(465,1024,l),
(466,1281,l),
(315,1281,l),
(282.367,1174.943,o),
(175.223,1026.665,o),
(34,1024,c),
(34,853,l),
(34,853,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
26 25 2 4 3 1 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 0 1 110 0 4 3 5 3 4 5 126 6 1 3 3 0 95 2 1 0 0 35 75 0 5 5 41 5 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 131 0 4 3 5 3 4 5 126 6 1 3 3 0 95 2 1 0 0 35 75 0 5 5 41 5 76
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
23 42 25 17 17 20 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 846;
}
);
note = t;
unicode = 116;
}
